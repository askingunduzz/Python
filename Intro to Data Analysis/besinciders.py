# -*- coding: utf-8 -*-
"""besinciDers.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1gEI6rQF1WrZFQzJ5gK3zqegJ3YgRUpka
"""

##classes and some important concepts
##we may talk about a bit regex

def f(x):
  return x**2

f(2)    ##a simple function

## kwargs and args
def f(x,**kwargs):
  print(kwargs)
  return x**2

f(2)     ##empty dictionary  rturn None olunca

f(2,h=2,y=3)

def g(h,t):
  return h+t

def f(x,**kwargs):
  n=g(**kwargs)
  return x**2+n

f(2,h=3,t=4)

##args is similar but no dictionary structure
def H(x,*args):
  print(args)
  return None

H(2)        ##empty tuple

H(2,3,4)     ##args,kwargs kullanınca 2,3,4,5,6 sayısını artırabilirm

def J(x):
  return x**2

J(2,4,56,7)   ##args kullanmatınca im not allowed

##what is a class
class animal:
  def __init__(self,name,color,age,weight):
    ##initilaze your object like an abstract class
    self.name=name
    self.color=color
    self.weight=weight
    self.color=color

  def move(self,direction):
    pass
  ##this is my abstract animal class

dog=animal("karabaş","black",10,15)
dog.name
dog.color

dog.move()  ##empty

class rectangle:
  ##class is a container
  def __init__(self,w,h):
    self.w=w
    self.h=h
  def area(self):
       return self.w*self.h
  def circumference(self):
    return 2*(self.w+self.h)
  def sum_of_circum_area(self):
    return self.area()+self.circumference()

rec=rectangle(2,3)

rec.area()

rec.circumference()

